{
  "version": 3,
  "sources": ["../server/server.ts"],
  "sourcesContent": ["import { ListingsEvents, ReportReason } from '../shared/events';\r\nimport {\r\n  Listing,\r\n  ReportListingInput,\r\n  CreateListingInput,\r\n  User,\r\n} from '../shared/types';\r\n\r\nimport { Server as QBServer } from 'qbcore.js';\r\n\r\nconst exp = global.exports;\r\n\r\nexport let QBCore: QBServer = null;\r\n\r\nlet FRAMEWORK: 'qb' | 'standalone' = 'standalone';\r\n\r\nif (GetResourceState('qb-core') === 'started') {\r\n  FRAMEWORK = 'qb';\r\n}\r\n\r\n\r\nswitch (FRAMEWORK) {\r\n  case 'qb':\r\n    QBCore = exp['qb-core'].GetCoreObject();\r\n    break;\r\n}\r\n\r\n\r\nglobal.source = 1;\r\n\r\nconst hotReloadConfig = {\r\n  resourceName: GetCurrentResourceName(),\r\n  files: ['/dist/server.js', '/dist/client.js', '/dist/html/index.js'],\r\n};\r\n\r\nif (GetResourceState('hotreload') === 'started') {\r\n  global.exports['hotreload'].add(hotReloadConfig);\r\n};\r\n\r\ntype ReportStore = {\r\n  [index in ReportReason]: Record<string, User>;\r\n};\r\n\r\ninterface IStore {\r\n  Listings: Listing[];\r\n  Reports: Record<Listing['id'] | undefined, ReportStore>;\r\n}\r\n\r\nconst Store: IStore = {\r\n  Listings: [] as Listing[],\r\n  Reports: {},\r\n};\r\n\r\nsetTimeout(() => {\r\n  if (GetResourceState('npwd') == 'started') {\r\n    emitNet(ListingsEvents.UpdateNUI, -1);\r\n  }\r\n}, 200);\r\n\r\nconst getPlayerBySource = (source: number, withPhoneNumber?: boolean): User => {\r\n  if (FRAMEWORK === 'qb') {\r\n    const player = QBCore.Functions.GetPlayer(source);\r\n\r\n    if (!player) {\r\n      throw new Error('Player could not be found');\r\n    }\r\n\r\n    const { citizenid, charinfo } = player.PlayerData;\r\n\r\n    return {\r\n      citizenId: citizenid,\r\n      name: `${charinfo.firstname} ${charinfo.lastname}`,\r\n      phoneNumber: withPhoneNumber ? charinfo.phone.toString() : '',\r\n    };\r\n  }\r\n};\r\n\r\nonNet(ListingsEvents.GetUser, (responseEvent: string) => {\r\n  const src = source;\r\n  const user = getPlayerBySource(src);\r\n\r\n  setImmediate(() => {\r\n    emitNet(responseEvent, src, { status: 'ok', data: user });\r\n  });\r\n});\r\n\r\nonNet(ListingsEvents.GetListings, async (responseEvent: string) => {\r\n  const src = source;\r\n  const listings = Store.Listings.filter((listing) => !listing.deletedAt);\r\n\r\n  await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n  setImmediate(() => {\r\n    emitNet(responseEvent, src, { status: 'ok', data: listings });\r\n  });\r\n});\r\n\r\nonNet(\r\n  ListingsEvents.CreateListing,\r\n  (responseEvent: string, data: CreateListingInput) => {\r\n    const src = source;\r\n    const user = getPlayerBySource(src, data.isCallable);\r\n\r\n    const newListing: Listing = {\r\n      ...data,\r\n      id: Store.Listings.length,\r\n      creator: user,\r\n    };\r\n\r\n    Store.Listings.push(newListing);\r\n\r\n    setImmediate(() => {\r\n      emitNet(ListingsEvents.UpdateNUI, -1);\r\n      emitNet(responseEvent, src, { status: 'ok', data: newListing });\r\n    });\r\n  },\r\n);\r\n\r\nonNet(\r\n  ListingsEvents.DeleteListing,\r\n  (responseEvent: string, data: { listingId: number }) => {\r\n    const src = source;\r\n    const { listingId } = data;\r\n\r\n    const user = getPlayerBySource(src);\r\n    const listing = Store.Listings.find((adv) => adv.id === listingId);\r\n\r\n    if (!listing) {\r\n      setImmediate(() => {\r\n        emitNet(responseEvent, src, {\r\n          status: 'error',\r\n          data: false,\r\n          errorMsg: 'Could not find the listing!',\r\n        });\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (listing.creator?.citizenId !== user.citizenId) {\r\n      setImmediate(() => {\r\n        emitNet(responseEvent, src, {\r\n          status: 'error',\r\n          data: false,\r\n          errorMsg: 'You are not the creator of this listing',\r\n        });\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newListings = Store.Listings.filter((adv) => adv.id !== listingId);\r\n    Store.Listings = [...newListings, { ...listing, deletedAt: Date.now() }];\r\n\r\n    setImmediate(() => {\r\n      emitNet(ListingsEvents.UpdateNUI, -1);\r\n      emitNet(responseEvent, src, { status: 'ok', data: true });\r\n    });\r\n  },\r\n);\r\n\r\nonNet(\r\n  ListingsEvents.ReportListing,\r\n  (responseEvent: string, data: ReportListingInput) => {\r\n    const src = source;\r\n    const player = getPlayerBySource(src);\r\n    const { listingId, reason } = data;\r\n\r\n    const currentReports = Store.Reports[listingId] ?? ({} as ReportStore);\r\n    const currentReportsForReason = currentReports[reason] ?? {};\r\n    const reportAmount = Object.keys(currentReportsForReason).length;\r\n\r\n    const recievedTooManyReports = reportAmount + 1 >= 1;\r\n\r\n    if (recievedTooManyReports) {\r\n      console.debug('Deleting listing because of too many reports.');\r\n      deleteListing(listingId);\r\n    } else {\r\n      Store.Reports = {\r\n        ...Store.Reports,\r\n        [listingId]: {\r\n          ...currentReports,\r\n          [reason]: {\r\n            ...currentReportsForReason,\r\n            [player.citizenId]: player,\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    setImmediate(() => {\r\n      recievedTooManyReports && emitNet(ListingsEvents.UpdateNUI, -1);\r\n      emitNet(responseEvent, src, { status: 'ok', data: true });\r\n    });\r\n  },\r\n);\r\n\r\nfunction deleteListing(listingId: number) {\r\n  const listing = Store.Listings.find((adv) => adv.id === listingId);\r\n\r\n  if (!listing) {\r\n    throw new Error('Could not find listing');\r\n  }\r\n\r\n  const newListings = Store.Listings.filter((adv) => adv.id !== listingId);\r\n  Store.Listings = [...newListings, { ...listing, deletedAt: Date.now() }];\r\n}\r\n"],
  "mappings": "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",
  "names": ["source"]
}
